name: Deploy EMI Verify App

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggers

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install backend dependencies
      run: |
        cd backend
        npm install
        
    - name: Run backend tests
      run: |
        cd backend
        npm test
        
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm install
        
    - name: Build frontend
      run: |
        cd frontend
        npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          # Set up error handling
          set -e
          
          echo "🚀 Starting deployment process..."
          
          # Navigate to project directory
          cd /home/ubuntu/emi-verify
          
          # Pull latest changes
          echo "📥 Pulling latest changes..."
          git pull origin main
          
          # Ensure Docker containers are running (for database only)
          echo "🐳 Starting database containers..."
          sudo systemctl start docker
          docker-compose up -d postgres pgadmin
          
          # Install backend dependencies and restart backend
          echo "📦 Installing backend dependencies..."
          cd backend
          npm install
          
          # Stop existing backend process
          echo "🛑 Stopping existing backend..."
          pkill -f "node server.js" || true
          
          # Start backend with nohup
          echo "🚀 Starting backend..."
          nohup node server.js > server.log 2>&1 &
          
          # Build and deploy frontend
          echo "🏗️ Building frontend..."
          cd ../frontend
          npm install
          REACT_APP_API_URL=https://emiverify.insightgridanalytic.com npm run build
          
          # Deploy frontend to nginx directory
          echo "📤 Deploying frontend..."
          sudo rm -rf /var/www/emi-verify/frontend/build/*
          sudo cp -r build/* /var/www/emi-verify/frontend/build/
          sudo cp ../dev-tools.html /var/www/emi-verify/frontend/build/
          
          # Wait for backend to start
          echo "⏳ Waiting for backend to start..."
          sleep 10
          
          # Health check
          echo "🏥 Running health check..."
          for i in {1..5}; do
            if curl -f https://emiverify.insightgridanalytic.com/api/auth/signup -X POST -H "Content-Type: application/json" -d '{"test":"true"}' > /dev/null 2>&1; then
              echo "✅ Backend is responding"
              break
            else
              echo "⏳ Waiting for backend... (attempt $i/5)"
              sleep 5
            fi
          done
          
          echo "🎉 Deployment completed successfully!"
          echo "🌐 Production services available at:"
          echo "   Frontend: https://emiverify.insightgridanalytic.com"
          echo "   Email Verification: https://emiverify.insightgridanalytic.com/verify-email"
          echo "   Backend API: https://emiverify.insightgridanalytic.com/api"
          echo "   PgAdmin: http://3.227.223.115:8080"
