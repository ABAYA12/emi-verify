name: Deploy EMI Verify App

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Allow manual trigger

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: Run backend tests
        run: |
          cd backend
          npm test

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Build frontend
        run: |
          cd frontend
          CI=false npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            set -e
            echo "🚀 Starting deployment..."

            cd /home/ubuntu/emi-verify

            echo "📥 Pulling latest changes..."
            git pull origin main

            echo "🐳 Starting database containers..."
            sudo systemctl start docker
            docker-compose up -d postgres pgadmin

            echo "📦 Installing backend dependencies..."
            cd backend
            npm ci

            echo "🛑 Restarting backend with PM2..."
            pm2 delete emi-backend || true
            pm2 start server.js --name emi-backend --time

            echo "🏗️ Building frontend..."
            cd ../frontend
            npm ci
            CI=false REACT_APP_API_URL=https://emiverify.insightgridanalytic.com npm run build

            echo "📤 Deploying frontend..."
            sudo mkdir -p /var/www/emi-verify/frontend/build
            sudo rm -rf /var/www/emi-verify/frontend/build/*
            sudo cp -r build/* /var/www/emi-verify/frontend/build/
            [ -f ../dev-tools.html ] && sudo cp ../dev-tools.html /var/www/emi-verify/frontend/build/

            echo "⏳ Waiting for backend to be ready..."
            sleep 10

            echo "🏥 Running health check..."
            if curl -f https://emiverify.insightgridanalytic.com/health > /dev/null 2>&1; then
              echo "✅ Backend is healthy!"
            else
              echo "❌ Backend health check failed!"
              exit 1
            fi

            echo "🎉 Deployment successful!"
            echo "🌐 Frontend: https://emiverify.insightgridanalytic.com"
            echo "🌐 Backend API: https://emiverify.insightgridanalytic.com/api"
            echo "🌐 PgAdmin: http://3.227.223.115:8080"
